Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.

class Solution {
    public boolean isValid(String str) {
        if(str.length() == 1){
            return false;
        }
        Stack<Character> s = new Stack<>();
        HashMap<Character, Character> hm = new HashMap<>();

        hm.put('}','{');
        hm.put(')','(');
        hm.put(']','[');

        for(int i = 0; i < str.length(); i++){
            char ch = str.charAt(i);

            if(!s.isEmpty() && (ch == '}' || ch == ')' || ch == ']')){
                if(hm.get(ch) == s.peek()){
                    s.pop();
                } else {
                    // s.push(ch);
                    return false;
                }
            } else {
                s.push(ch);
            }
            
        }

        return s.isEmpty();
    }
}
